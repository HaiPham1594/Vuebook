{"remainingRequest":"/Users/hai/Desktop/VueJS/vue-app/node_modules/babel-loader/lib/index.js!/Users/hai/Desktop/VueJS/vue-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/hai/Desktop/VueJS/vue-app/src/store/index.js","dependencies":[{"path":"/Users/hai/Desktop/VueJS/vue-app/src/store/index.js","mtime":1605346328870},{"path":"/Users/hai/Desktop/VueJS/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hai/Desktop/VueJS/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hai/Desktop/VueJS/vue-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/hai/Desktop/VueJS/vue-app/src/store/index.js"],"names":["Vue","Vuex","router","fb","use","postsCollection","orderBy","onSnapshot","snapshot","postsArray","forEach","doc","post","data","id","push","store","commit","Store","state","userProfile","posts","mutations","setUserProfile","val","setPosts","actions","login","form","dispatch","auth","signInWithEmailAndPassword","email","password","user","signup","createUserWithEmailAndPassword","usersCollection","uid","set","name","title","fetchUserProfile","get","currentRoute","path","logout","signOut","createPost","add","createdOn","Date","content","userId","currentUser","userName","comments","likes","likePost","docId","likesCollection","exists","postId","update","likesCount","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport router from '../router/index'\nimport * as fb from '../firebase'\n\nVue.use(Vuex)\n\n// realtime firebase\nfb.postsCollection.orderBy('createdOn', 'desc').onSnapshot(snapshot => {\n  const postsArray = []\n\n  snapshot.forEach(doc => {\n    const post = doc.data()\n    post.id = doc.id\n\n    postsArray.push(post)\n  })\n\n  store.commit('setPosts', postsArray)\n})\n\nconst store = new Vuex.Store({\n  state: {\n    userProfile: {},\n    posts: []\n  },\n  mutations: {\n    setUserProfile (state, val) {\n      state.userProfile = val\n    },\n    setPosts (state, val) {\n      state.posts = val\n    }\n  },\n  actions: {\n    async login ({ dispatch }, form) {\n      // sign user in\n      const { user } = await fb.auth.signInWithEmailAndPassword(form.email, form.password)\n\n      // fetch user profile and set in state\n      dispatch('fetchUserProfile', user)\n    },\n    async signup ({ dispatch }, form) {\n      // sign user up\n      const { user } = await fb.auth.createUserWithEmailAndPassword(form.email, form.password)\n\n      // create user profile object in userCollections\n      await fb.usersCollection.doc(user.uid).set({\n        name: form.name,\n        title: form.title\n      })\n\n      // fetch user profile and set in state\n      dispatch('fetchUserProfile', user)\n    },\n    async fetchUserProfile ({ commit }, user) {\n      // fetch user profile\n      const userProfile = await fb.usersCollection.doc(user.uid).get()\n\n      // set user profile in state\n      commit('setUserProfile', userProfile.data())\n\n      // change route to dashboard\n      if (router.currentRoute.path === '/login') {\n        router.push('/')\n      }\n    },\n    async logout ({ commit }) {\n      await fb.auth.signOut()\n\n      // clear userProfile and redirect to /login\n      commit('userProfile', {})\n      router.push('/login')\n    },\n    createPost ({ state, commit }, post) {\n      fb.postsCollection.add({\n        createdOn: new Date(),\n        content: post.content,\n        userId: fb.auth.currentUser.uid,\n        userName: state.userProfile.name,\n        comments: 0,\n        likes: 0\n      })\n    },\n    async likePost ({ commit }, post) {\n      const userId = fb.auth.currentUser.uid\n      const docId = `${userId}_${post.id}`\n\n      // check if user has liked post\n      const doc = await fb.likesCollection.doc(docId).get()\n      if (doc.exists) { return }\n\n      // create post\n      await fb.likesCollection.doc(docId).set({\n        postId: post.id,\n        userId: userId\n      })\n\n      // update post likes count\n      fb.postsCollection.doc(post.id).update({\n        likes: post.likesCount + 1\n      })\n    }\n  },\n  modules: {\n  }\n})\n\nexport default store\n"]}]}